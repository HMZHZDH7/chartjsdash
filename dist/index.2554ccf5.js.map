{"mappings":"ACgEA,eAAe,IACb,IAAM,EAAe,SAAS,cAAc,CAAC,SAEvC,EAAU,EAAa,KAAK,CAElC,GAAI,AAAmB,KAAnB,EAAQ,IAAI,GAAW,CACzB,IAAM,EAAgB,SAAS,cAAc,CAAC,QACxC,EAAuB,SAAS,aAAa,CAAC,OACpD,EAAqB,SAAS,CAAC,GAAG,CAAC,qBACnC,IAAM,EAA0B,SAAS,aAAa,CAAC,OACvD,EAAwB,SAAS,CAAC,GAAG,CAAC,wBAGtC,IAAM,EAAc,SAAS,aAAa,CAAC,KAC3C,EAAY,SAAS,CAAC,GAAG,CAAC,gBAC1B,EAAY,WAAW,CAAG,EAE1B,IAAM,EAAc,SAAS,aAAa,CAAC,KAC3C,EAAY,SAAS,CAAC,GAAG,CAAC,gBAC1B,EAAY,WAAW,CAAG,QAE1B,EAAqB,WAAW,CAAC,GACjC,EAAqB,WAAW,CAAC,GAGjC,EAAc,WAAW,CAAC,GAE1B,EAAa,KAAK,CAAG,GAGrB,IAAM,EAAa,SAAS,aAAa,CAAC,KAC1C,EAAW,SAAS,CAAC,GAAG,CAAC,oBACzB,EAAW,WAAW,CAAG,aAEzB,IAAM,EAAiB,SAAS,aAAa,CAAC,KAC9C,EAAe,SAAS,CAAC,GAAG,CAAC,cAC7B,EAAe,WAAW,CAAG,WAE7B,EAAwB,WAAW,CAAC,GACpC,EAAwB,WAAW,CAAC,GAEpC,EAAc,WAAW,CAAC,GAC1B,MACF,CACF,CAjFA,SAAS,gBAAgB,CAAC,mBAAoB,WAG5C,IAAM,EAAe,CAGnB,aACA,2FACA,2FACA,2FASD,CAEK,EAAmB,SAAS,cAAc,CAAC,qBAGjD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,MAAM,CAAE,IAAK,CAE5C,IAAI,EAAM,IAAI,MAEd,AADA,CAAA,EAAM,SAAS,aAAa,CAAC,MAA7B,EACI,SAAS,CAAC,GAAG,CAAC,iBAElB,EAAI,GAAG,CAAG,CAAY,CAAC,EAAE,CACzB,EAAiB,WAAW,CAAC,EAC/B,CAEF,GAxDE,AADqB,SAAS,cAAc,CAAC,SAChC,gBAAgB,CAAC,QAAS,AAAC,IACpB,UAAd,EAAM,GAAG,EACX,GAEJ,GAEA,AADmB,SAAS,cAAc,CAAC,QAChC,OAAO,CAAG,EAErB,AADmB,SAAS,cAAc,CAAC,iBAChC,OAAO,CAGpB,WACE,IAAM,EAAO,SAAS,cAAc,CAAC,UAC/B,EAAa,SAAS,cAAc,CAAC,iBACvC,EAAK,SAAS,CAAC,QAAQ,CAAC,oBAC1B,EAAK,SAAS,CAAC,MAAM,CAAC,mBACtB,EAAW,SAAS,CAAC,MAAM,CAAC,YAE5B,EAAK,SAAS,CAAC,GAAG,CAAC,mBACnB,EAAW,SAAS,CAAC,GAAG,CAAC,UAE7B","sources":["<anon>","src/chatbox.js"],"sourcesContent":["var $b5a3a2f801d3a34e$exports = {};\n// chatbox.js\nfunction $b5a3a2f801d3a34e$var$setupEventListeners() {\n    const messageInput = document.getElementById(\"input\");\n    messageInput.addEventListener(\"keyup\", (event)=>{\n        if (event.key === \"Enter\") $b5a3a2f801d3a34e$var$sendMessage();\n    });\n    const sendButton = document.getElementById(\"send\");\n    sendButton.onclick = $b5a3a2f801d3a34e$var$sendMessage;\n    const menuButton = document.getElementById(\"pop-up-button\");\n    menuButton.onclick = $b5a3a2f801d3a34e$var$openMenu;\n}\nfunction $b5a3a2f801d3a34e$var$openMenu() {\n    const menu = document.getElementById(\"pop-up\");\n    const menuButton = document.getElementById(\"pop-up-button\");\n    if (menu.classList.contains(\"pop-up-expanded\")) {\n        menu.classList.remove(\"pop-up-expanded\");\n        menuButton.classList.remove(\"rotate\");\n    } else {\n        menu.classList.add(\"pop-up-expanded\");\n        menuButton.classList.add(\"rotate\");\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Your code here\n    // create an array of all images\n    const chartLibrary = [\n        // \"..dist/images/charts/chart1.png\",\n        // \"..dist/images/charts//chart2.png\",\n        \"./pink.jpg\",\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\"\n    ];\n    const galleryContainer = document.getElementById(\"gallery-container\");\n    //loop through the image array\n    for(let i = 0; i < chartLibrary.length; i++){\n        //create a new image element\n        var img = new Image();\n        img = document.createElement(\"img\");\n        img.classList.add(\"gallery-image\");\n        //set the source of the image element\n        img.src = chartLibrary[i];\n        galleryContainer.appendChild(img);\n    }\n});\nasync function $b5a3a2f801d3a34e$var$sendMessage() {\n    const messageInput = document.getElementById(\"input\");\n    const message = messageInput.value;\n    if (message.trim() !== \"\") {\n        const chatContainer = document.getElementById(\"chat\");\n        const userMessageContainer = document.createElement(\"div\");\n        userMessageContainer.classList.add(\"message-container\");\n        const chatbotMessageContainer = document.createElement(\"div\");\n        chatbotMessageContainer.classList.add(\"ca-message-container\");\n        // User message\n        const userMessage = document.createElement(\"p\");\n        userMessage.classList.add(\"user-message\");\n        userMessage.textContent = message;\n        const messengerID = document.createElement(\"p\");\n        messengerID.classList.add(\"messenger-id\");\n        messengerID.textContent = \"User:\";\n        userMessageContainer.appendChild(messengerID);\n        userMessageContainer.appendChild(userMessage);\n        // Ship it to frontend\n        chatContainer.appendChild(userMessageContainer);\n        messageInput.value = \"\";\n        // Bot message\n        const botMessage = document.createElement(\"p\");\n        botMessage.classList.add(\"received-message\");\n        botMessage.textContent = \"I am a bot\";\n        const botMessengerID = document.createElement(\"p\");\n        botMessengerID.classList.add(\"chatbot-id\");\n        botMessengerID.textContent = \"Chatbot:\";\n        chatbotMessageContainer.appendChild(botMessengerID);\n        chatbotMessageContainer.appendChild(botMessage);\n        chatContainer.appendChild(chatbotMessageContainer);\n        return;\n    }\n}\n//     const url = 'http://localhost:5005/webhooks/rest/webhook';//'https://dashboards.create.aau.dk/webhooks/rest/webhook';\n//     //const url = 'https://dashboards.create.aau.dk/webhooks/rest/webhook';\n//     const data = {\n//       message: message\n//     };\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(data)\n//       });\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n//       const responseData = await response.json();\n//       const responseDataArray = responseData.messages || []\n//       console.log(response)\n//       console.log(responseData)\n//       responseData.forEach(message => {\n//         console.log(message.text);\n//         const botMessage = document.createElement(\"div\");\n//         botMessage.classList.add(\"received-message\");\n//         botMessage.textContent = message.text;\n//         chatContainer.appendChild(botMessage);\n//       })\n//     } catch (error) {\n//       console.error('Error:', error);\n//       // Handle the error as needed, e.g., show an error message to the user\n//     }\n//     import(\"./viz\").then(function (viz) {\n//       viz.createLineChart()\n//     });\n//   }\n// }\n$b5a3a2f801d3a34e$var$setupEventListeners(); // async function getURL() {\n //   const url = 'https://dashboards.create.aau.dk/webhooks/rest/webhook/status';\n //   const response = await fetch(url);\n //   if (response.status === 200) {\n //     return \"http://localhost:5005\"\n //   } else {\n //     return \"https://dashboards.create.aau.dk:5005\"\n //   }\n // }\n\n\n//# sourceMappingURL=index.2554ccf5.js.map\n","// chatbox.js\n\nfunction setupEventListeners() {\n  const messageInput = document.getElementById(\"input\");\n  messageInput.addEventListener(\"keyup\", (event) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  });\n  const sendButton = document.getElementById(\"send\");\n  sendButton.onclick = sendMessage;\n  const menuButton = document.getElementById(\"pop-up-button\");\n  menuButton.onclick = openMenu;\n};\n\nfunction openMenu() {\n  const menu = document.getElementById(\"pop-up\");\n  const menuButton = document.getElementById(\"pop-up-button\");\n  if (menu.classList.contains(\"pop-up-expanded\")) {\n    menu.classList.remove(\"pop-up-expanded\");\n    menuButton.classList.remove(\"rotate\");\n  } else {\n    menu.classList.add(\"pop-up-expanded\");\n    menuButton.classList.add(\"rotate\");\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Your code here\n  // create an array of all images\n  const chartLibrary = [\n    // \"..dist/images/charts/chart1.png\",\n    // \"..dist/images/charts//chart2.png\",\n    \"./pink.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    //\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n    // \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/SNice.svg/1200px-SNice.svg.png\",\n  ];\n\n  const galleryContainer = document.getElementById(\"gallery-container\");\n\n  //loop through the image array\n  for (let i = 0; i < chartLibrary.length; i++) {\n    //create a new image element\n    var img = new Image();\n    img = document.createElement(\"img\");\n    img.classList.add(\"gallery-image\");\n    //set the source of the image element\n    img.src = chartLibrary[i];\n    galleryContainer.appendChild(img);\n  }\n\n});\n\n\n\nasync function sendMessage() {\n  const messageInput = document.getElementById(\"input\");\n\n  const message = messageInput.value;\n\n  if (message.trim() !== \"\") {\n    const chatContainer = document.getElementById(\"chat\");\n    const userMessageContainer = document.createElement(\"div\");\n    userMessageContainer.classList.add(\"message-container\");\n    const chatbotMessageContainer = document.createElement(\"div\");\n    chatbotMessageContainer.classList.add(\"ca-message-container\");\n\n    // User message\n    const userMessage = document.createElement(\"p\");\n    userMessage.classList.add(\"user-message\");\n    userMessage.textContent = message;\n\n    const messengerID = document.createElement(\"p\");\n    messengerID.classList.add(\"messenger-id\");\n    messengerID.textContent = \"User:\";\n\n    userMessageContainer.appendChild(messengerID);\n    userMessageContainer.appendChild(userMessage);\n\n    // Ship it to frontend\n    chatContainer.appendChild(userMessageContainer);\n\n    messageInput.value = \"\";\n\n    // Bot message\n    const botMessage = document.createElement(\"p\");\n    botMessage.classList.add(\"received-message\");\n    botMessage.textContent = \"I am a bot\";\n\n    const botMessengerID = document.createElement(\"p\");\n    botMessengerID.classList.add(\"chatbot-id\");\n    botMessengerID.textContent = \"Chatbot:\";\n\n    chatbotMessageContainer.appendChild(botMessengerID);\n    chatbotMessageContainer.appendChild(botMessage);\n\n    chatContainer.appendChild(chatbotMessageContainer);\n    return\n  }\n}\n\n//     const url = 'http://localhost:5005/webhooks/rest/webhook';//'https://dashboards.create.aau.dk/webhooks/rest/webhook';\n//     //const url = 'https://dashboards.create.aau.dk/webhooks/rest/webhook';\n//     const data = {\n//       message: message\n//     };\n\n//     try {\n//       const response = await fetch(url, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(data)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const responseData = await response.json();\n//       const responseDataArray = responseData.messages || []\n//       console.log(response)\n//       console.log(responseData)\n\n//       responseData.forEach(message => {\n//         console.log(message.text);\n//         const botMessage = document.createElement(\"div\");\n//         botMessage.classList.add(\"received-message\");\n//         botMessage.textContent = message.text;\n//         chatContainer.appendChild(botMessage);\n//       })\n//     } catch (error) {\n//       console.error('Error:', error);\n//       // Handle the error as needed, e.g., show an error message to the user\n//     }\n//     import(\"./viz\").then(function (viz) {\n//       viz.createLineChart()\n//     });\n//   }\n// }\n\nsetupEventListeners();\n\n\n\n// async function getURL() {\n//   const url = 'https://dashboards.create.aau.dk/webhooks/rest/webhook/status';\n\n//   const response = await fetch(url);\n//   if (response.status === 200) {\n//     return \"http://localhost:5005\"\n//   } else {\n//     return \"https://dashboards.create.aau.dk:5005\"\n//   }\n// }\n"],"names":["$b5a3a2f801d3a34e$var$sendMessage","messageInput","document","getElementById","message","value","trim","chatContainer","userMessageContainer","createElement","classList","add","chatbotMessageContainer","userMessage","textContent","messengerID","appendChild","botMessage","botMessengerID","addEventListener","chartLibrary","galleryContainer","i","length","img","Image","src","event","key","sendButton","onclick","menuButton","menu","contains","remove"],"version":3,"file":"index.2554ccf5.js.map"}