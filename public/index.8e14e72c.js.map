{"mappings":"ACgDA,eAAe,IACb,IAAM,EAAe,SAAS,cAAc,CAAC,gBAEvC,EAAU,EAAa,KAAK,CAElC,GAAI,AAAmB,KAAnB,EAAQ,IAAI,GAAW,CACzB,IAAM,EAAoB,SAAS,cAAc,CAAC,YAC5C,EAAc,SAAS,aAAa,CAAC,OAG3C,EAAY,SAAS,CAAC,GAAG,CAAC,gBAC1B,EAAY,WAAW,CAAG,EAE1B,EAAkB,WAAW,CAAC,GAK9B,EAAa,KAAK,CAAG,GAOrB,GAAI,CACF,IAAM,EAAW,MAAM,MANb,8CAMwB,CAChC,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAVX,CACX,QAAS,CACX,EASE,GAEA,GAAI,CAAC,EAAS,EAAE,CACd,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAC,CAAC,EAG1D,IAAM,EAAe,MAAM,EAAS,IAAI,EACd,CAAA,EAAa,QAAQ,CAG/C,EAAa,OAAO,CAAC,AAAA,IACnB,QAAQ,GAAG,CAAC,EAAQ,IAAI,EACxB,IAAM,EAAa,SAAS,aAAa,CAAC,OAC1C,EAAW,SAAS,CAAC,GAAG,CAAC,oBACzB,EAAW,WAAW,CAAG,EAAQ,IAAI,CACrC,EAAkB,WAAW,CAAC,EAChC,EACF,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,SAAU,EAE1B,CAEA,MAAM,wDACH,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IAEJ,QAAQ,GAAG,CAAC,EACd,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,SAAU,GAC5C,CACF,EAEA,AA9GA,WACE,QAAQ,GAAG,CAAC,iCAEZ,IAAM,EAAgB,SAAS,aAAa,CAAC,MAC7C,CAAA,EAAc,EAAE,CAAG,iBAEnB,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,EAAE,CAAG,UAEb,IAAM,EAAoB,SAAS,aAAa,CAAC,MACjD,CAAA,EAAkB,EAAE,CAAG,WAEvB,IAAM,EAAiB,SAAS,aAAa,CAAC,MAC9C,CAAA,EAAe,EAAE,CAAG,kBAEpB,IAAM,EAAe,SAAS,aAAa,CAAC,QAC5C,CAAA,EAAa,IAAI,CAAG,OACpB,EAAa,EAAE,CAAG,eAClB,EAAa,WAAW,CAAG,uBAE3B,IAAM,EAAa,SAAS,aAAa,CAAC,SAC1C,CAAA,EAAW,WAAW,CAAG,OACzB,EAAW,OAAO,CAAG,EAErB,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAE3B,EAAQ,WAAW,CAAC,GACpB,EAAQ,WAAW,CAAC,GACpB,EAAc,WAAW,CAAC,GAE1B,IAAI,EAAkB,SAAS,cAAc,CAAC,kBAC1C,EACF,EAAgB,WAAW,CAAC,GAG5B,QAAQ,KAAK,CAAC,8BAGlB","sources":["<anon>","src/chatbox.js"],"sourcesContent":["var $b5a3a2f801d3a34e$exports = {};\n// chatbox.js\nfunction $b5a3a2f801d3a34e$var$createChatbox() {\n    console.log(\"createChatbox function called\");\n    const chatContainer = document.createElement(\"div\");\n    chatContainer.id = \"chat-container\";\n    const chatbox = document.createElement(\"div\");\n    chatbox.id = \"chatbox\";\n    const messagesContainer = document.createElement(\"div\");\n    messagesContainer.id = \"messages\";\n    const inputContainer = document.createElement(\"div\");\n    inputContainer.id = \"input-container\";\n    const messageInput = document.createElement(\"input\");\n    messageInput.type = \"text\";\n    messageInput.id = \"messageInput\";\n    messageInput.placeholder = \"Type your message...\";\n    const sendButton = document.createElement(\"button\");\n    sendButton.textContent = \"Send\";\n    sendButton.onclick = $b5a3a2f801d3a34e$var$sendMessage;\n    inputContainer.appendChild(messageInput);\n    inputContainer.appendChild(sendButton);\n    chatbox.appendChild(messagesContainer);\n    chatbox.appendChild(inputContainer);\n    chatContainer.appendChild(chatbox);\n    var targetContainer = document.getElementById(\"main-container\");\n    if (targetContainer) targetContainer.appendChild(chatContainer);\n    else console.error(\"Target container not found!\");\n}\n/*document.addEventListener(\"DOMContentLoaded\", function() {\n  createChatbox();\n});*/ async function $b5a3a2f801d3a34e$var$sendMessage() {\n    const messageInput = document.getElementById(\"messageInput\");\n    const message = messageInput.value;\n    if (message.trim() !== \"\") {\n        const messagesContainer = document.getElementById(\"messages\");\n        const userMessage = document.createElement(\"div\");\n        // User message styling\n        userMessage.classList.add(\"user-message\");\n        userMessage.textContent = message;\n        messagesContainer.appendChild(userMessage);\n        // Call the send function from the imported socket script\n        //sendMessageToServer(message);\n        messageInput.value = \"\";\n        const url = \"http://localhost:5005/webhooks/rest/webhook\";\n        const data = {\n            message: message\n        };\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            });\n            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n            const responseData = await response.json();\n            const responseDataArray = responseData.messages || [];\n            responseData.forEach((message)=>{\n                console.log(message.text);\n                const botMessage = document.createElement(\"div\");\n                botMessage.classList.add(\"received-message\");\n                botMessage.textContent = message.text;\n                messagesContainer.appendChild(botMessage);\n            });\n        } catch (error) {\n            console.error(\"Error:\", error);\n        // Handle the error as needed, e.g., show an error message to the user\n        }\n        fetch(\"http://localhost:5000/webhooks/rest/webhook/get_json\").then((response)=>response.json()).then((data)=>{\n            // Handle the received JSON data in your dashboard\n            console.log(data);\n        }).catch((error)=>console.error(\"Error:\", error));\n    }\n}\n$b5a3a2f801d3a34e$var$createChatbox();\n// Import the socket script\n//import { sendMessageToServer } from \"./socket.js\";\nasync function $b5a3a2f801d3a34e$var$getURL() {\n    const url = \"https://dashboards.create.aau.dk:5005/status\";\n    const response = await fetch(url);\n    if (response.status === 200) return \"http://localhost:5005\";\n    else return \"https://dashboards.create.aau.dk:5005\";\n}\n\n\n//# sourceMappingURL=index.8e14e72c.js.map\n","// chatbox.js\n\nfunction createChatbox() {\n  console.log(\"createChatbox function called\");\n\n  const chatContainer = document.createElement(\"div\");\n  chatContainer.id = \"chat-container\";\n\n  const chatbox = document.createElement(\"div\");\n  chatbox.id = \"chatbox\";\n\n  const messagesContainer = document.createElement(\"div\");\n  messagesContainer.id = \"messages\";\n\n  const inputContainer = document.createElement(\"div\");\n  inputContainer.id = \"input-container\";\n\n  const messageInput = document.createElement(\"input\");\n  messageInput.type = \"text\";\n  messageInput.id = \"messageInput\";\n  messageInput.placeholder = \"Type your message...\";\n\n  const sendButton = document.createElement(\"button\");\n  sendButton.textContent = \"Send\";\n  sendButton.onclick = sendMessage;\n\n  inputContainer.appendChild(messageInput);\n  inputContainer.appendChild(sendButton);\n\n  chatbox.appendChild(messagesContainer);\n  chatbox.appendChild(inputContainer);\n  chatContainer.appendChild(chatbox);\n\n  var targetContainer = document.getElementById('main-container');\n  if (targetContainer) {\n    targetContainer.appendChild(chatContainer);\n\n  } else {\n    console.error(\"Target container not found!\");\n  }\n\n}\n\n/*document.addEventListener(\"DOMContentLoaded\", function() {\n  createChatbox();\n});*/\n\n\nasync function sendMessage() {\n  const messageInput = document.getElementById(\"messageInput\");\n\n  const message = messageInput.value;\n\n  if (message.trim() !== \"\") {\n    const messagesContainer = document.getElementById(\"messages\");\n    const userMessage = document.createElement(\"div\");\n\n    // User message styling\n    userMessage.classList.add(\"user-message\");\n    userMessage.textContent = message;\n\n    messagesContainer.appendChild(userMessage);\n\n    // Call the send function from the imported socket script\n    //sendMessageToServer(message);\n\n    messageInput.value = \"\";\n\n    const url = 'http://localhost:5005/webhooks/rest/webhook';\n    const data = {\n      message: message\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const responseData = await response.json();\n      const responseDataArray = responseData.messages || []\n\n\n      responseData.forEach(message => {\n        console.log(message.text);\n        const botMessage = document.createElement(\"div\");\n        botMessage.classList.add(\"received-message\");\n        botMessage.textContent = message.text;\n        messagesContainer.appendChild(botMessage);\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle the error as needed, e.g., show an error message to the user\n    }\n\n    fetch('http://localhost:5000/webhooks/rest/webhook/get_json')\n      .then(response => response.json())\n      .then(data => {\n        // Handle the received JSON data in your dashboard\n        console.log(data);\n      })\n      .catch(error => console.error('Error:', error))\n  }\n}\n\ncreateChatbox()\n\n// Import the socket script\n//import { sendMessageToServer } from \"./socket.js\";\n\nasync function getURL () {\n  const url = 'https://dashboards.create.aau.dk:5005/status';\n\n  const response = await fetch(url);\n  if(response.status === 200) {\n    return \"http://localhost:5005\"\n  } else {\n    return \"https://dashboards.create.aau.dk:5005\"\n  }\n}\n"],"names":["$b5a3a2f801d3a34e$var$sendMessage","messageInput","document","getElementById","message","value","trim","messagesContainer","userMessage","createElement","classList","add","textContent","appendChild","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","messages","forEach","console","log","text","botMessage","error","then","data","catch","$b5a3a2f801d3a34e$var$createChatbox","chatContainer","id","chatbox","inputContainer","type","placeholder","sendButton","onclick","targetContainer"],"version":3,"file":"index.8e14e72c.js.map"}